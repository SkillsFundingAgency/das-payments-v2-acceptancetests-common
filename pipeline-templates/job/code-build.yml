parameters:
  TargetProjects: 'src/**/*.csproj'
jobs:
- job: CodeBuild
  pool:
    name: SLD Build Pool
  variables:
  - group: BUILD Management Resources
  steps:
  - template: /azure-pipelines-templates/build/step/gitversion.yml

  - task: NuGetCommand@2
    displayName: Nuget Restore
    inputs:
      command: restore
      #projects: ${{ parameters.TargetProjects }}
      projects: 'src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj'
      noCache: true
      feedsToUse: 'select'
      vstsFeed: 'dct-pkg'

  - task: DotNetCoreCLI@2
    displayName: Dotnet Restore 
    inputs:
      command: restore
      #projects: ${{ parameters.TargetProjects }}
      projects: 'src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj'
      noCache: true
      feedsToUse: 'select'
      vstsFeed: 'dct-pkg'

  - task: DotNetCoreCLI@2
  #- task: NuGetCommand@2
    displayName: Build
    inputs:
      projects:  'src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj'
      # projects:  ${{ parameters.TargetProjects }}
      arguments: '--configuration $(buildConfiguration) --no-restore'
  
  #- task: MSBuild@1
  #  displayName: 'Build csproj'
  #  inputs:
  #    solution: '**/*.csproj'
  #    msbuildArguments: '/p:version=$(Build.BuildNumber) /p:FileVersion=$(Build.BuildNumber)'
  #    clean: true
  #    maximumCpuCount: true
  #    logProjectEvents: true
  #    createLogFile: true

  #- task: PublishBuildArtifacts@1
  #  displayName: 'Publish artifacts'
  #  inputs:
  #    PathtoPublish: $(build.artifactstagingdirectory)
  #    ArtifactName: 'PublishBuildArtifacts'


   # Publish SFA.DAS.Payments.AcceptanceTests.Components.Core
  - task: DotNetCoreCLI@2
    displayName: "Publish SFA.DAS.Payments.AcceptanceTests.Components.Core"
    inputs:
      command: publish
      publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
      projects: src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj
      arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-restore --no-build"
      modifyOutputPath: true

  # # Publish SFA.DAS.Payments.AcceptanceTests.Core
  # - task: DotNetCoreCLI@2
  #   displayName: "Publish SFA.DAS.Payments.AcceptanceTests.Core"
  #   inputs:
  #     command: publish
  #     publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
  #     projects: src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj
  #     arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-restore --no-build"
  #     modifyOutputPath: true

  # # Publish SFA.DAS.Payments.AcceptanceTests.Services
  # - task: DotNetCoreCLI@2
  #   displayName: "Publish SFA.DAS.Payments.AcceptanceTests.Services"
  #   inputs:
  #     command: publish
  #     publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
  #     projects: src/SFA.DAS.Payments.AcceptanceTests.Services/SFA.DAS.Payments.AcceptanceTests.Services.csproj
  #     arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-restore --no-build"
  #     modifyOutputPath: true

  # #Publish SFA.DAS.Payments.Tests.Core
  # - task: DotNetCoreCLI@2
  #   displayName: "Publish SFA.DAS.Payments.Tests.Core"
  #   inputs:
  #     command: publish
  #     publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
  #     projects: src/SFA.DAS.Payments.Tests.Core/SFA.DAS.Payments.Tests.Core.csproj
  #     arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-restore --no-build"
  #     modifyOutputPath: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)/publish'
    inputs:
      Contents: |
        /**
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
      OverWrite: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: drop'
    inputs:
      targetPath: $(build.artifactstagingdirectory)/publish
      artifactName: drop

  - template: /azure-pipelines-templates/build/step/nuget-pack.yml
    parameters:
      DotNetStandardPackagesToPack: |
        src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj;

  # - template: /azure-pipelines-templates/build/step/nuget-pack.yml
  #   parameters:
  #     DotNetStandardPackagesToPack: |
  #       src/SFA.DAS.Payments.AcceptanceTests.Components.Core/SFA.DAS.Payments.AcceptanceTests.Components.Core.csproj;
  #       src/SFA.DAS.Payments.AcceptanceTests.Core/SFA.DAS.Payments.AcceptanceTests.Core.csproj;
  #       src/SFA.DAS.Payments.AcceptanceTests.Services/SFA.DAS.Payments.AcceptanceTests.Services.csproj;
  #       src/SFA.DAS.Payments.Tests.Core/SFA.DAS.Payments.Tests.Core.csproj;